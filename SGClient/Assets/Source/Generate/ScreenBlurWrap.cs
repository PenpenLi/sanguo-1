//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ScreenBlurWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ScreenBlur), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("FourTapCone", FourTapCone);
		L.RegFunction("OnDisable", OnDisable);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("BlurBoxShader", get_BlurBoxShader, set_BlurBoxShader);
		L.RegVar("BlurSize", get_BlurSize, set_BlurSize);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FourTapCone(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			ScreenBlur obj = (ScreenBlur)ToLua.CheckObject(L, 1, typeof(ScreenBlur));
			UnityEngine.RenderTexture arg0 = (UnityEngine.RenderTexture)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.RenderTexture));
			UnityEngine.RenderTexture arg1 = (UnityEngine.RenderTexture)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.RenderTexture));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.FourTapCone(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDisable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ScreenBlur obj = (ScreenBlur)ToLua.CheckObject(L, 1, typeof(ScreenBlur));
			obj.OnDisable();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlurBoxShader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ScreenBlur obj = (ScreenBlur)o;
			UnityEngine.Shader ret = obj.BlurBoxShader;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BlurBoxShader on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BlurSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ScreenBlur obj = (ScreenBlur)o;
			float ret = obj.BlurSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BlurSize on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BlurBoxShader(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ScreenBlur obj = (ScreenBlur)o;
			UnityEngine.Shader arg0 = (UnityEngine.Shader)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Shader));
			obj.BlurBoxShader = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BlurBoxShader on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BlurSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ScreenBlur obj = (ScreenBlur)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.BlurSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BlurSize on a nil value" : e.Message);
		}
	}
}

